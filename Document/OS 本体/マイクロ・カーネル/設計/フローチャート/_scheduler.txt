/start _scheduler
/if running task が0？
/else
/define _dispatcher_suspend
/end
/if 最高優先度が0ではない？
/else
優先度マップを読み出し
優先度マップと0xffff0000の論理積を取る
/if 論理積が0ではない？
最高優先度に16を足す
優先度マップを16ビット右シフト
/else
/end
優先度マップと0x0000ff00の論理積を取る
/if 論理積が0ではない？
最高優先度に8を足す
優先度マップを8ビット右シフト
/else
/end
優先度マップと0x000000f0の論理積を取る
/if 論理積が0ではない？
最高優先度に4を足す
優先度マップを4ビット右シフト
/else
/end
優先度マップと0x0000000cの論理積を取る
/if 論理積が0ではない？
最高優先度に2を足す
優先度マップを2ビット右シフト
/else
/end
優先度マップと0x00000003の論理積を取る
/if 論理積が0ではない？
最高優先度に1を足す
/else
/end
/end
/end
/if 最高優先度が0ではない？
/else
スタック・ポインタにシステム・スタックを設定
タスク起動アドレスにアイドル・タスクのスタート・アドレスを設定
割り込みを解放
/stop アイドル・タスクにジャンプ
/end
最高優先度のタスクを読み出す
SBT のrunning task に最高優先度のタスクを設定
TIB からタスク属性を読み込み
/if スケジュール属性が非プリエンプティブ属性？
SBTのディスパッチ禁止/許可属性を有効にする
/else
/end
TCB のタスク状態を読み込み
/if タスク・コンテキストがスタックに積まれている？
/define _dispatcher_resume
/else
TIBからタスクの初期スタックを読み出し
スタック・ポインタに初期スタックを設定
タスクの起動アドレスを読み込み
リンク・ポインタにTerminateTask のアドレスを設定
/end
/stop タスクのスタート・アドレスにジャンプ